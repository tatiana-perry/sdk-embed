{"version":3,"file":"create-data-store.js","sourceRoot":"","sources":["../src/create-data-store.ts"],"names":[],"mappings":";;AACA,uDAAiE;AACjE,2CAA2D;AAG3D,yBACI,OAA+D,EAC/D,YAA8B,EAC9B,OAAuE;IAEvE,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE;QAC/B,OAAO,IAAI,oBAAS,CAAC,OAAO,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;KACxD;IAED,OAAO,IAAI,oBAAS,CAAC,0BAAe,CAAC,OAAO,CAAC,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;AAC1E,CAAC;AAVD,kCAUC","sourcesContent":["import Action from './action';\nimport combineReducers, { ReducerMap } from './combine-reducers';\nimport DataStore, { DataStoreOptions } from './data-store';\nimport Reducer from './reducer';\n\nexport default function createDataStore<TState, TAction extends Action = Action, TTransformedState = TState>(\n    reducer: Reducer<TState, TAction> | ReducerMap<TState, TAction>,\n    initialState?: Partial<TState>,\n    options?: Partial<DataStoreOptions<TState, TAction, TTransformedState>>\n): DataStore<TState, TAction, TTransformedState> {\n    if (typeof reducer === 'function') {\n        return new DataStore(reducer, initialState, options);\n    }\n\n    return new DataStore(combineReducers(reducer), initialState, options);\n}\n"]}