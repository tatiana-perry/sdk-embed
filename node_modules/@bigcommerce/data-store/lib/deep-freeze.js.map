{"version":3,"file":"deep-freeze.js","sourceRoot":"","sources":["../src/deep-freeze.ts"],"names":[],"mappings":";;AAAA,iCAAuC;AAKvC,oBAAsC,MAAe;IACjD,IAAI;QACA,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,sBAAa,CAAC,MAAM,CAAC,CAAC,EAAE;YAC/E,OAAO,MAAM,CAAC;SACjB;QAED,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YACvB,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,UAAA,KAAK,IAAI,OAAA,UAAU,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAAC,CAAC,CAAC;SAChE;QAED,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,UAAC,MAAM,EAAE,GAAG;YACvE,MAAM,CAAC,GAAc,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,GAAc,CAAC,CAAC,CAAC;YAE5D,OAAO,MAAM,CAAC;QAClB,CAAC,EAAE,EAAO,CAAC,CAAC,CAAC;KAChB;IAAC,OAAO,KAAK,EAAE;QAGZ,IAAI,KAAK,YAAY,SAAS,EAAE;YAC5B,OAAO,MAAM,CAAC;SACjB;QAED,MAAM,KAAK,CAAC;KACf;AACL,CAAC;AAxBD,6BAwBC","sourcesContent":["import { isPlainObject } from 'lodash';\n\nexport default function deepFreeze<T>(object: T[]): ReadonlyArray<T>;\nexport default function deepFreeze<T extends object>(object: T): Readonly<T>;\nexport default function deepFreeze<T>(object: T): T;\nexport default function deepFreeze<T>(object: T[] | T): ReadonlyArray<T> | Readonly<T> | T {\n    try {\n        if (Object.isFrozen(object) || (!Array.isArray(object) && !isPlainObject(object))) {\n            return object;\n        }\n\n        if (Array.isArray(object)) {\n            return Object.freeze(object.map(value => deepFreeze(value)));\n        }\n\n        return Object.freeze(Object.getOwnPropertyNames(object).reduce((result, key) => {\n            result[key as keyof T] = deepFreeze(object[key as keyof T]);\n\n            return result;\n        }, {} as T));\n    } catch (error) {\n        // Browsers that only support ES5 will throw `TypeError` when checking\n        // if a primitive value is frozen or trying to freeze a primitive value.\n        if (error instanceof TypeError) {\n            return object;\n        }\n\n        throw error;\n    }\n}\n"]}